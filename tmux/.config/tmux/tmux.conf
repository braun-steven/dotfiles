#############################################
# https://gist.github.com/spicycode/1229612 #
#############################################


# Prefix
unbind C-b
set -g prefix C-Space
bind Space send-prefix

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

set -ag terminal-overrides ",foot:RGB"  # Necessary for 256 colors in foot + tmux

#set -g default-terminal screen-256color
set -g status-keys vi
set -g history-limit 10000

setw -g mode-keys vi
set -g mouse on
# setw -g mode-mouse one
setw -g monitor-activity on

unbind '"'
unbind %

bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

# easier and faster switching between next/prev window
bind C-p previous-window
bind C-n next-window

# Reload tmux config
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded config"

# THEME
set -g status-bg black
set -g status-fg white
# set -g window-status-current-bg white
# set -g window-status-current-fg black
# set -g window-status-current-attr bold
set -g status-interval 60
set -g status-left-length 30
set -g status-left '#[fg=green](#S) #(whoami)'
set -g status-right '#{prefix_highlight} | %a %Y-%m-%d %H:%M'

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# increase scrollback buffer size
set -g history-limit 50000

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# refresh 'status-left' and 'status-right' more often
set -g status-interval 5

# set only on OS X where it's required
# set -g default-command "reattach-to-user-namespace -l $SHELL"

# upgrade $TERM
# set -g default-terminal "screen-256color"

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

# focus events enabled for terminals that support them
set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
# setw -g aggressive-resize on




# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'sainnhe/tmux-fzf'
# set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-yank'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'


# BEGIN TMUX PAIN CONTROL (some of my machines have a tmux version that is not compatible with the tmux-pain-control plugin)

bind-key h   select-pane -L
bind-key C-h select-pane -L
bind-key j   select-pane -D
bind-key C-j select-pane -D
bind-key k   select-pane -U
bind-key C-k select-pane -U
bind-key l   select-pane -R
bind-key C-l select-pane -R
bind-key -r "<" swap-window -d -t -1
bind-key -r ">" swap-window -d -t +1
bind-key -r H resize-pane -L "5"
bind-key -r J resize-pane -D "5"
bind-key -r K resize-pane -U "5"
bind-key -r L resize-pane -R "5"
bind-key "|" split-window -h -c "#{pane_current_path}"
bind-key "/" split-window -h -c "#{pane_current_path}"
bind-key "\\" split-window -fh -c "#{pane_current_path}"
bind-key "-" split-window -v -c "#{pane_current_path}"
bind-key "_" split-window -fv -c "#{pane_current_path}"
bind-key "%" split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"
bind-key "c" new-window -c "#{pane_current_path}"

# END TMUX PAIN CONTROL
bind q killp


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
