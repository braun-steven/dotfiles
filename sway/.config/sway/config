## -------------- Sway
include /etc/sway/config.d/*

exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK PATH
exec hash dbus-update-activation-environment 2>/dev/null && \
     dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP=sway

set $wallpaper_base ~/wallpaper/macos-big-sur-night
set $wallpaper $wallpaper_base.png
set $wallpaper_dimblur $wallpaper_base-dimblur.png

output * bg $wallpaper fill


input type:touchpad {
    tap enabled
    natural_scroll enabled
    scroll_factor 0.10
    pointer_accel 0.20
}

input type:pointer {
    # scroll_factor 0.35
    # accel_profile "adaptive" # disable mouse acceleration (enabled by default; to set it manually, use "adaptive" instead of "flat")
    pointer_accel 0.2 # set mouse sensitivity (between -1 and 1)
}

input type:keyboard {
  # Capslock key should work as escape key
  # See /usr/share/X11/xkb/rules/xorg.lst for options
  xkb_options ctrl:nocaps
  xkb_layout us
  xkb_variant altgr-intl

  # Typematic delay and rate
  repeat_delay 200
  repeat_rate 40
}

bindsym Mod1+h exec wtype -k left
bindsym Mod1+j exec wtype -k down
bindsym Mod1+k exec wtype -k up
bindsym Mod1+l exec wtype -k right

# Mark XWayland windows
for_window [shell="xwayland"] title_format "[XWayland] %title"

# Swaylock with options. "-f" daemonizes swaylock to work with systemd suspend afterwards
set $Locker swaylock -f \
      --image $wallpaper_dimblur \
      --inside-color 00000088 \
      --ring-color 2E323C \
      --key-hl-color 799033 \
      --ring-ver-color 2E323C \
      --inside-ver-color 2E323C \
      --indicator-radius 75 \
      --indicator-thickness 15


# These are symlinked to either {background,theme}-{dark,light} based on `darkman get`
include ~/.config/sway/background
include ~/.config/sway/theme

# Fixed dark theme
# include ~/.config/sway/theme-dark
# include ~/.config/sway/background-dark

# Modifier keys
set $mod Mod4
set $mod2 Mod1

# Font for window titles.
# font pango:Inter 10
font pango:IBM Plex Mono 10
font pango:CommitMono 10

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
#bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec alacritty msg create-window || alacritty
bindsym $mod+Shift+Return exec emacsclient -c

# mouse focus
focus_follows_mouse yes

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec rofi -show combi

# window navigation
bindsym $mod+h focus left
bindsym $mod+l focus right
bindsym $mod+k focus up
bindsym $mod+j focus down

# Navigate workspace next/prev
bindsym $mod+Ctrl+l workspace next
bindsym $mod+Ctrl+h workspace prev
bindsym $mod+$mod2+l workspace next
bindsym $mod+$mod2+h workspace prev

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# split in horizontal orientation
bindsym $mod+n split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+f floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# Load default screen layout
set $w1 "1 󰖟 web"
set $w2 "2 󰆍 main"
set $w3 "3 󰞷 sub"
set $w4 "4"
set $w5 "5"
set $w6 "6"
set $w7 "7"
set $w8 "8  spotify"
set $w9 "9 󰊫 mail+cal"
set $w0 "10 󰻞 chat"
set $wy "11 (y) LLMs"
set $wu "12 (u)"
set $wi "13 (i)"
set $wo "14 (o) pomodoro"
set $wp "15  (p) gtd"

# switch to workspace
bindsym $mod+1 workspace number $w1
bindsym $mod+2 workspace number $w2
bindsym $mod+3 workspace number $w3
bindsym $mod+4 workspace number $w4
bindsym $mod+5 workspace number $w5
bindsym $mod+6 workspace number $w6
bindsym $mod+7 workspace number $w7
bindsym $mod+8 workspace number $w8
bindsym $mod+9 workspace number $w9
bindsym $mod+0 workspace number $w0
bindsym $mod+y workspace number $wy
bindsym $mod+u workspace number $wu
bindsym $mod+i workspace number $wi
bindsym $mod+o workspace number $wo
bindsym $mod+p workspace number $wp

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $w1
bindsym $mod+Shift+2 move container to workspace number $w2
bindsym $mod+Shift+3 move container to workspace number $w3
bindsym $mod+Shift+4 move container to workspace number $w4
bindsym $mod+Shift+5 move container to workspace number $w5
bindsym $mod+Shift+6 move container to workspace number $w6
bindsym $mod+Shift+7 move container to workspace number $w7
bindsym $mod+Shift+8 move container to workspace number $w8
bindsym $mod+Shift+9 move container to workspace number $w9
bindsym $mod+Shift+0 move container to workspace number $w0
bindsym $mod+Shift+y move container to workspace number $wy
bindsym $mod+Shift+u move container to workspace number $wu
bindsym $mod+Shift+i move container to workspace number $wi
bindsym $mod+Shift+o move container to workspace number $wo
bindsym $mod+Shift+p move container to workspace number $wp

# Allow workspace renaming
bindsym $mod+Shift+r exec ~/dotbin/sway-rename-workspace

# Scratchpad
bindsym $mod+Shift+s move window to scratchpad; scratchpad show
bindsym $mod+s scratchpad show

# Assign specific applications to specific workspaces
assign [app_id="Mattermost"] $w0
assign [app_id="Slack"] $w0
assign [app_id="Todoist"] $wp
assign [app_id="thunderbird"] $w9

# Set workspaces to specific monitors

include $HOME/.config/sway/monitors
# # set $firstmon DP-1
# # set $secondmon HDMI-A-1
workspace $w1 output $firstmon
workspace $w2 output $firstmon
workspace $w3 output $firstmon
workspace $w4 output $firstmon
workspace $w5 output $firstmon
workspace $w6 output $firstmon
workspace $w7 output $firstmon
workspace $w8 output $firstmon
workspace $w9 output $firstmon
workspace $w0 output $firstmon
workspace $wy output $secondmon
workspace $wu output $secondmon
workspace $wi output $secondmon
workspace $wo output $secondmon
workspace $wp output $secondmon

# Menu for lock logout etc.
set $mode_restart Restart: (p) wireplumber (e) emacs service, (s) sway (w) waybar (m) monitors
mode "$mode_restart" {
    bindsym p exec systemctl --user restart wireplumber, mode "default"
    bindsym e exec systemctl --user restart emacs, mode "default"
    bindsym w exec killall waybar && waybar &> /tmp/waybar.log, mode "default"
    bindsym s exec swaymsg reload, mode "default"
    # bindsym m exec killall kanshi && sleep 0.5 && kanshi, mode "default"
    bindsym m exec ~/.cargo/bin/shikanectl reload, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Ctrl+r mode "$mode_restart"

# Menu for lock logout etc.
set $mode_system System (l) lock (e) logout (s) suspend (r) reboot (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec $Locker, mode "default"
    bindsym e exec swaymsg exit, mode "default"
    bindsym s exec $Locker && systemctl suspend, mode "default"
    bindsym r exec systemctl reboot, mode "default"
    bindsym Shift+s exec systemctl poweroff -i, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Ctrl+e mode "$mode_system"



# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec brillo -A 5 -q -u 100000
bindsym XF86MonBrightnessDown exec brillo -U 5 -q -u 100000


# Special keys to adjust volume via PulseAudio
bindsym --locked XF86AudioMute exec pactl set-sink-mute \@DEFAULT_SINK@ toggle
bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume \@DEFAULT_SINK@ -5%
bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume \@DEFAULT_SINK@ +5%
bindsym --locked XF86AudioMicMute exec pactl set-source-mute \@DEFAULT_SOURCE@ toggle

# Enable worksapce back and forth
workspace_auto_back_and_forth yes

# Floating mod
floating_modifier $mod

# Correct floating handling
for_window [window_role="pop-up"] floating enable
for_window [window_role="bubble"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [window_role="dialog"] floating enable
for_window [window_role="menu"] floating enable
for_window [window_role="Preferences"] floating enable
for_window [title="Volume Control"] floating enable resize set 640 960
for_window [title=".*Bitwarden.*"] floating enable
for_window [title="Characters"] floating enable

# Zoom, float everything except for the actual meeting window
for_window [app_id="zoom"] floating enable
for_window [app_id="Zoom"] floating enable
for_window [app_id="zoom" title="Zoom Meeting"] floating disable
for_window [app_id="Zoom" title="Zoom Meeting"] floating disable

# Auto-switch to urgent windows
for_window [urgent="latest"] focus


# Start pulseaudio controls with mod+p in floating mode
# Use create-window to reduce alacritty startup time
# Use -t "Pulse" after "create-window" to correctly set title
bindsym $mod+Ctrl+p exec alacritty msg create-window -t "PULSE" -e 'pulsemixer' || alacritty -t "PULSE" -e 'pulsemixer'
bindsym $mod+Ctrl+s exec rofi-set-audio-sink

# Floating window rules
for_window [title="PULSE"] floating enable
for_window [app_id="Pavucontrol"] floating enable, resize set 1280 768

# suspend/lock shortcuts
bindsym $mod+$mod2+Ctrl+s exec $Locker & systemctl suspend
bindsym $mod+$mod2+Ctrl+l exec $Locker

# Move to first workspace on startup
exec swaymsg workspace $w1

# Using pulseaudio-utils (append "-s $sinkname" without quotes to override default sink)
bindsym XF86AudioRaiseVolume exec amixer set Master 5%+
bindsym XF86AudioLowerVolume exec amixer set Master 5%-
bindsym XF86AudioMute        exec amixer set Master toggle

# You can also use any non-zero value if you'd like to have a border
for_window [class=".*"] border pixel 3
default_floating_border none
titlebar_border_thickness 1

# title_align center


# Programms or things that should be run on every start of sway but not when reloading sway
exec {
  # Enable clipboard
  wl-paste -t text --watch clipman store --no-persist


  ### Idle configuration
  # Dim screen after inactivity of 1 minute
  # brillo -O: save current brightness
  # brillo -S $(( $(brillo) / 2 )) -u 150000: set brightness to half of what it is now (150us fade out)
  # brillo -S 0 -u 150000: set brightness to 0 (150us fade out)
  # brillo -I -u 150000: restore brightness (150us fade in)
  #
  # Turn off keyboard backlight after inactivity of 1 minute with laptop-idle keyboard/screen
  #
  # Turn off screen after inactivity of 3 minutes
  swayidle -w \
            timeout 1200 'systemctl suspend' resume 'sleep 3' \
            timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
            timeout 180 'swaymsg "output eDP-1 power off"' resume 'swaymsg "output eDP-1 power on"' \
            timeout 60 'laptop-idle idle keyboard' resume 'laptop-idle resume keyboard' \
            timeout 60 'laptop-idle idle screen' resume 'laptop-idle resume screen' \
            before-sleep 'loginctl lock-session $XDG_SESSION_ID' before-sleep 'playerctl pause' lock 'playerctl -a pause; $Locker'

  # Enable gsd xsettings such that applications can infer dark/light theme settings
  /usr/libexec/gsd-xsettings

  # Bluetooth applet
  blueman-applet

  # Notification daemon
  dunst
  # swaync

  # Enable polkit (e.g. polkit-gnome) authentication agent to get GUI password prompts
  /usr/libexec/polkit-gnome-authentication-agent-1

  # Start XDG autostart .desktop files using dex. See also
  # https://wiki.archlinux.org/index.php/XDG_Autostart
  # The Autostart directories in order of preference are:
  #    user-specific: $XDG_CONFIG_HOME/autostart (~/.config/autostart by default)
  #    system-wide: $XDG_CONFIG_DIRS/autostart (/etc/xdg/autostart by default) [1]
  dex-autostart --autostart --environment sway

  # Add red shift during the evening hours
  wlsunset -t 4000 -T 6500 -l 49.98 -L 8.27  # Handles dpms on/off better than gammastep

  # NetworkManager applet
  exec nm-applet --tray --sm-disable &

  # Run shikane: detect correct monitors
  # exec kanshi
  ~/.cargo/bin/shikane

  # Evolution alarm notififications for calendar reminders
  /usr/libexec/evolution-data-server/evolution-alarm-notify

}

# Programms or things that should be run on every start/reload of sway
exec_always {

  # Run waybar as bar (first kill existing bars) (Note: without the "bash -c ..." waybar doesn't start on first sway start)
  bash -c "killall waybar; waybar"

  # Disable notifications
  gsettings set org.gnome.nm-applet disable-disconnected-notifications "true"
  gsettings set org.gnome.nm-applet disable-connected-notifications "true"

  # Reload shikane: detect correct monitors
  ~/.cargo/bin/shikanectl reload
  # killall kanshi & sleep 0.5 && kanshi &
}
